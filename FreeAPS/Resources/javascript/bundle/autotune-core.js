var freeaps_autotuneCore;(()=>{"use strict";var e={734:(e,r,o)=>{var i=o(923);e.exports=function(e){var r,o,t,a=e.previousAutotune,n=e.pumpProfile,s=n.basalprofile,u=a.basalprofile,l=a.isfProfile,d=l.sensitivities[0].sensitivity,f=a.carb_ratio,v=d/f,m=a.dia,h=a.insulinPeakTime;!0==!a.useCustomPeakTime&&(h="ultra-rapid"===a.curve?55:75),n&&n.isfProfile&&(o=(r=n.isfProfile.sensitivities[0].sensitivity)/(t=n.carb_ratio),f||(f=t),v||(v=o),d||(d=r));var p=e.preppedGlucose,c=p.CSFGlucoseData,F=p.ISFGlucoseData,g=p.basalGlucoseData,S=p.CRData,C=p.diaDeviations,M=p.peakDeviations,R=m;if(C){for(var D=C[2].meanDeviation,b=C[2].RMSDeviation,I=1e6,w=1e6,x=2,T=2,P=0;P<C.length;P++){var _=C[P].meanDeviation,k=C[P].RMSDeviation;_<I&&(I=Math.round(1e3*_)/1e3,x=P),k<w&&(w=Math.round(1e3*k)/1e3,T=P)}console.error("Best insulinEndTime for meanDeviations:",C[x].dia,"hours"),console.error("Best insulinEndTime for RMSDeviations:",C[T].dia,"hours"),x<2&&T<2?C[1].meanDeviation<.99*D&&C[1].RMSDeviation<.99*b&&(R=C[1].dia):x>2&&T>2&&C[3].meanDeviation<.99*D&&C[3].RMSDeviation<.99*b&&(R=C[3].dia),R>12&&(console.error("insulinEndTime maximum is 12h: not raising further"),R=12),R!==m?console.error("Adjusting insulinEndTime from",m,"to",R,"hours"):console.error("Leaving insulinEndTime unchanged at",m,"hours")}var L=h;if(M&&M[2]){var y=M[2].meanDeviation,O=M[2].RMSDeviation;for(I=1e6,w=1e6,x=2,T=2,P=0;P<M.length;P++)_=M[P].meanDeviation,k=M[P].RMSDeviation,_<I&&(I=Math.round(1e3*_)/1e3,x=P),k<w&&(w=Math.round(1e3*k)/1e3,T=P);console.error("Best insulinPeakTime for meanDeviations:",M[x].peak,"minutes"),console.error("Best insulinPeakTime for RMSDeviations:",M[T].peak,"minutes"),x<2&&T<2?M[1].meanDeviation<.99*y&&M[1].RMSDeviation<.99*O&&(L=M[1].peak):x>2&&T>2&&M[3].meanDeviation<.99*y&&M[3].RMSDeviation<.99*O&&(L=M[3].peak),L!==h?console.error("Adjusting insulinPeakTime from",h,"to",L,"minutes"):console.error("Leaving insulinPeakTime unchanged at",h)}var B=0,N=0;S.forEach((function(e){var r=(e.CREndBG-e.CRInitialBG)/d;e.CRInsulinTotal=e.CRInitialIOB+e.CRInsulin+r,e.CRInsulinTotal>0&&(B+=e.CRCarbs,N+=e.CRInsulinTotal)})),N=Math.round(1e3*N)/1e3;var j=Math.round(B/N*1e3)/1e3;console.error("CRTotalCarbs:",B,"CRTotalInsulin:",N,"totalCR:",j);var E=[],G=[];for(P=0;P<24;P++){for(var A=0;A<u.length;++A)if(u[A].minutes<=60*P){if(0===u[A].rate)return void console.error("ERROR: bad basalProfile",u[A]);E[P]=JSON.parse(JSON.stringify(u[A]))}E[P].i=P,E[P].minutes=60*P;var J=("000"+P).slice(-2);if(E[P].start=J+":00:00",E[P].rate=Math.round(1e3*E[P].rate)/1e3,s&&s[0]){for(A=0;A<s.length;++A){if(0===s[A].rate)return void console.error("ERROR: bad pumpBasalProfile",s[A]);s[A].minutes<=60*P&&(G[P]=JSON.parse(JSON.stringify(s[A])))}G[P].i=P,G[P].minutes=60*P,G[P].rate=Math.round(1e3*G[P].rate)/1e3}}for(var H=JSON.parse(JSON.stringify(E)),U=0;U<24;U++){let e=0;for(P=0;P<g.length;++P){var q;if(g[P].date)q=new Date(g[P].date);else if(g[P].displayTime)q=new Date(g[P].displayTime.replace("T"," "));else{if(!g[P].dateString){console.error("Could not determine last BG time");continue}q=new Date(g[P].dateString)}U===q.getHours()&&(e+=parseFloat(g[P].deviation))}e=Math.round(1e3*e)/1e3,console.error("Hour",U.toString(),"total deviations:",e,"mg/dL");var z=.2*e/d;if(z=Math.round(100*z)/100,console.error("Hour",U,"basal adjustment needed:",z,"U/hr"),z>0)for(var K=-3;K<0;K++){var Q=U+K;Q<0&&(Q+=24),H[Q].rate+=z/3,H[Q].rate=Math.round(1e3*H[Q].rate)/1e3}else if(z<0){var V=0;for(K=-3;K<0;K++)(Q=U+K)<0&&(Q+=24),V+=H[Q].rate;var W=1+z/V;for(K=-3;K<0;K++)(Q=U+K)<0&&(Q+=24),H[Q].rate=H[Q].rate*W,H[Q].rate=Math.round(1e3*H[Q].rate)/1e3}}var X=.7,Y=1.2;if(s&&s[0])for(U=0;U<24;U++){void 0!==n.autosens_max&&(Y=n.autosens_max),void 0!==n.autosens_min&&(X=n.autosens_min);var Z=G[U].rate*Y,$=G[U].rate*X;H[U].rate>Z?(console.error("Limiting hour",U,"basal to",Z.toFixed(2),"(which is",Y,"* pump basal of",G[U].rate,")"),H[U].rate=Z):H[U].rate<$&&(console.error("Limiting hour",U,"basal to",$.toFixed(2),"(which is",X,"* pump basal of",G[U].rate,")"),H[U].rate=$),H[U].rate=Math.round(1e3*H[U].rate)/1e3}var ee=0;for(U=0;U<24;U++)if(E[U].rate===H[U].rate){for(var re=23,oe=U;oe<24;oe++)if(E[oe].rate!==H[oe].rate){re=oe;break}H[U].rate=Math.round(1e3*(.8*E[U].rate+.1*H[ee].rate+.1*H[re].rate))/1e3,H[U].untuned?H[U].untuned++:H[U].untuned=1,console.error("Adjusting hour",U,"basal from",E[U].rate,"to",H[U].rate,"based on hour",ee,"=",H[ee].rate,"and hour",re,"=",H[re].rate)}else ee=U;console.error(H),u=H;var ie,te=0,ae=0,ne=0,se=0;for(P=0;P<c.length;++P)"start"===c[P].mealAbsorption?(te=0,ae=parseInt(c[P].mealCarbs)):"end"===c[P].mealAbsorption?(ne+=ae,se+=te+=parseFloat(c[P].deviation)):(te+=Math.max(0*a.min_5m_carbimpact,parseFloat(c[P].deviation)),ae=Math.max(ae,parseInt(c[P].mealCarbs)));0===ne&&(ne+=ae),0===se&&(se+=te);var ue=.8*v+.2*(ie=0===ne?v:Math.round(se/ne*100)/100);if(void 0!==o){var le=o*Y,de=o*X;ue>le?(console.error("Limiting CSF to",le.toFixed(2),"(which is",Y,"* pump CSF of",o,")"),ue=le):ue<de&&(console.error("Limiting CSF to",de.toFixed(2),"(which is",X,"* pump CSF of",o,")"),ue=de)}var fe=Math.round(1e3*v)/1e3;if(ue=Math.round(1e3*ue)/1e3,se=Math.round(1e3*se)/1e3,console.error("totalMealCarbs:",ne,"totalDeviations:",se,"oldCSF",fe,"fullNewCSF:",ie,"newCSF:",ue),ue&&(v=ue),0===j)var ve=f;else ve=j;var me=t*Y;me>150&&(me=150);var he=t*X;he<3&&(he=3),void 0!==t&&(ve>me?(console.error("Limiting fullNewCR from",ve,"to",me.toFixed(2),"(which is",Y,"* pump CR of",t,")"),ve=me):ve<he&&(console.error("Limiting fullNewCR from",ve,"to",he.toFixed(2),"(which is",X,"* pump CR of",t,")"),ve=he));var pe=.8*f+.2*ve;void 0!==t&&(pe>me?(console.error("Limiting CR to",me.toFixed(2),"(which is",Y,"* pump CR of",t,")"),pe=me):pe<he&&(console.error("Limiting CR to",he.toFixed(2),"(which is",X,"* pump CR of",t,")"),pe=he)),pe=Math.round(1e3*pe)/1e3,console.error("oldCR:",f,"fullNewCR:",ve,"newCR:",pe),pe&&(f=pe);let ce=[];var Fe=[],ge=[],Se=[];for(P=0;P<F.length;++P){var Ce=parseFloat(F[P].deviation);ce.push(Ce);var Me=parseFloat(F[P].BGI);Fe.push(Me);var Re=parseFloat(F[P].avgDelta);ge.push(Re);var De=1+Ce/Me;Se.push(De)}ge.sort((function(e,r){return e-r})),Fe.sort((function(e,r){return e-r})),ce.sort((function(e,r){return e-r})),Se.sort((function(e,r){return e-r}));var be,Ie=i(ce,.5),we=i(Fe,.5),xe=Math.round(1e3*i(Se,.5))/1e3,Te=d;F.length<10?console.error("Only found",F.length,"ISF data points, leaving ISF unchanged at",d):Te=d*xe,Te=Math.round(1e3*Te)/1e3,be=void 0!==n.autotune_isf_adjustmentFraction?n.autotune_isf_adjustmentFraction:1;var Pe=r/X,_e=r/Y,ke=d;if(void 0!==r){if(Te<0)var Le=d;else Le=be*Te+(1-be)*r;Le>Pe?(console.error("Limiting adjusted ISF of",Le.toFixed(2),"to",Pe.toFixed(2),"(which is pump ISF of",r,"/",X,")"),Le=Pe):Le<_e&&(console.error("Limiting adjusted ISF of",Le.toFixed(2),"to",_e.toFixed(2),"(which is pump ISF of",r,"/",Y,")"),Le=_e),(ke=.8*d+.2*Le)>Pe?(console.error("Limiting ISF of",ke.toFixed(2),"to",Pe.toFixed(2),"(which is pump ISF of",r,"/",X,")"),ke=Pe):ke<_e&&(console.error("Limiting ISF of",ke.toFixed(2),"to",_e.toFixed(2),"(which is pump ISF of",r,"/",Y,")"),ke=_e)}ke=Math.round(1e3*ke)/1e3,Ie=Math.round(1e3*Ie)/1e3,we=Math.round(1e3*we)/1e3,Le=Math.round(1e3*Le)/1e3,console.error("p50deviation:",Ie,"p50BGI",we,"p50ratios:",xe,"Old ISF:",d,"fullNewISF:",Te,"adjustedISF:",Le,"newISF:",ke,"newDIA:",R,"newPeak:",L),ke&&(d=ke);var ye=a;return ye.basalprofile=u,l.sensitivities[0].sensitivity=d,ye.isfProfile=l,ye.sens=d,ye.csf=v,f=Math.round(1e3*f)/1e3,ye.carb_ratio=f,ye.dia=R,ye.insulinPeakTime=L,(C||M)&&(ye.useCustomPeakTime=!0),ye}},923:(e,r)=>{function o(e,r){if(0===e.length)return 0;if("number"!=typeof r)throw new TypeError("p must be a number");if(r<=0)return e[0];if(r>=1)return e[e.length-1];var o=e.length*r,i=Math.floor(o),t=i+1,a=o%1;return t>=e.length?e[i]:e[i]*(1-a)+e[t]*a}Object.defineProperty(r,"__esModule",{value:!0}),r.default=o,r=e.exports=o}},r={};var o=function o(i){var t=r[i];if(void 0!==t)return t.exports;var a=r[i]={exports:{}};return e[i](a,a.exports,o),a.exports}(734);freeaps_autotuneCore=o})();